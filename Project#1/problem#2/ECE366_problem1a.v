/**
 * This is an autogenerated netlist code from CircuitVerse. Verilog Code can be
 * tested on https://www.edaplayground.com/ using Icarus Verilog 0.9.7. This is an
 * experimental module and some manual changes make need to be done in order for
 * this to work.
 *
 * If you have any ideas/suggestions or bug fixes, raise an issue
 * on https://github.com/CircuitVerse/CircuitVerse/issues/new/choose
 */

/*
  Element Usage Report
    Input - 3 times
    AndGate - 3 times
    OrGate - 1 times
    Output - 2 times
    XorGate - 2 times
*/

/*
  Usage Instructions and Tips
    Labels - Ensure unique label names and avoid using verilog keywords
    Warnings - Connect all optional inputs to remove warnings
*/

// Sample Testbench Code - Uncomment to use

/*
module TestBench();

  reg a, b, Cin;

  wire s, Cout;

  Main DUT0(s, Cout, a, b, Cin);

  initial begin
    a = 0;
    b = 0;
    Cin = 0;

    #15
    $display("s = %b", s);
    $display("Cout = %b", Cout);

    #10
    $display("s = %b", s);
    $display("Cout = %b", Cout);

    $finish;

  end
endmodule

*/

module one_bit_full_adder(A, B, Cin, S, Cout);
  
  input A, B, Cin;
  output S,  Cout;
 
  assign S = A ^ B ^ Cin;
  assign Cout = (A & B) | (B & Cin) | (A & Cin);
  
endmodule
